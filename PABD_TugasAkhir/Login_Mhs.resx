<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>