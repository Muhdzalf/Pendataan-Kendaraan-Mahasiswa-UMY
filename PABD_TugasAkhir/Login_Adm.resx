<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CHNXKcArAAAAAElFTkSuQmCC
</value>
  </data>
</root>